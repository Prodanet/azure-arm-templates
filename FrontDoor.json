{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "frontDoorName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Front Door instance."
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the storage account."
            }
        },
        "cdnCustomDomainName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Custom domain name for the Front Door endpoint. Leave empty to use the default azurefd.net domain."
            }
        },
        "appCustomDomainName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Custom domain name for the backend application. Leave empty if not using a custom domain."
            }
        },
        "appHostNameLabel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The label for the DNS name of the public IP resource in Azure."
            }
        },
        "appHostNameFQDN": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The fully qualified domain name (FQDN) of the public IP resource in Azure."
            }
        },
        "SharedKeyVaultResourceGroupName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the resource group where the key vault is located."
            }
        },
        "SharedKeyVaultName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the Key Vault where the certificate is stored."
            }
        },
        "SharedKeyVaultCertificateName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the certificate in Key Vault for the custom domain. Leave empty to use a managed certificate."
            }
        }
    },
    "variables": {
        "subscriptionId": "[subscription().subscriptionId]",
        "endpointHostNameBlob": "[concat(parameters('storageAccountName'), '.blob.core.windows.net')]",
        "endpointOriginNameBlob": "[concat(parameters('storageAccountName'), '-blob-core-windows-net')]",
        "originGroupNameBlob": "[concat(parameters('frontDoorName'), '-Default')]",
        "originGroupNameApp": "[concat(parameters('frontDoorName'), '-app')]",
        "routeNameBlob": "[replace(parameters('frontDoorName'), '-', '')]",
        "routeNameApp": "[concat(variables('routeNameBlob'), 'app')]",
        "customDomainNameBlob": "[replace(parameters('cdnCustomDomainName'), '.', '-')]", 
        "customDomainNameApp": "[replace(parameters('appCustomDomainName'), '.', '-')]",
        "customCertificateName": "[if(not(equals(parameters('SharedKeyVaultCertificateName'), '')), concat(parameters('SharedKeyVaultName'), '-', parameters('SharedKeyVaultCertificateName'), '-latest'), '')]"
    },
    "resources": [
        {
            "type": "Microsoft.Cdn/profiles",
            "apiVersion": "2021-06-01",
            "name": "[parameters('frontDoorName')]",
            "location": "Global",
            "sku": {
                "name": "Standard_AzureFrontDoor"
            },
            "kind": "frontdoor",
            "properties": {
                "originResponseTimeoutSeconds": 30
            }
        },
        {
            "condition": "[not(equals(parameters('SharedKeyVaultCertificateName'), ''))]",
            "type": "Microsoft.Cdn/profiles/secrets",
            "apiVersion": "2025-04-15",
            "name": "[concat(parameters('frontDoorName'), '/', variables('customCertificateName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
            ],
            "properties": {
                "parameters": {
                    "type": "CustomerCertificate",
                    "secretSource": {
                        "id": "[concat('/subscriptions/', variables('subscriptionId'), '/resourceGroups/', parameters('SharedKeyVaultResourceGroupName'), '/providers/Microsoft.KeyVault/vaults/', parameters('SharedKeyVaultName'), '/secrets/', parameters('SharedKeyVaultCertificateName'))]"
                    },
                    "useLatestVersion": true,
                    "subjectAlternativeNames": [
                        "*.prodanet.com",
                        "prodanet.com"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/afdEndpoints",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('frontDoorName'), '/', parameters('frontDoorName'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
            ],
            "properties": {
                "enabledState": "Enabled"
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/afdEndpoints",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('frontDoorName'), '/', parameters('frontDoorName'), '-app')]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
            ],
            "properties": {
                "enabledState": "Enabled"
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/originGroups",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('frontDoorName'), '/', variables('originGroupNameBlob'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
            ],
            "properties": {
                "loadBalancingSettings": {
                    "sampleSize": 4,
                    "successfulSamplesRequired": 2,
                    "additionalLatencyInMilliseconds": 0
                }
            }
        },
        {
            "condition": "[not(equals(parameters('appCustomDomainName'), ''))]",
            "type": "Microsoft.Cdn/profiles/originGroups",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('frontDoorName'), '/', variables('originGroupNameApp'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
            ],
            "properties": {
                "loadBalancingSettings": {
                    "sampleSize": 4,
                    "successfulSamplesRequired": 3,
                    "additionalLatencyInMilliseconds": 50
                },
                "sessionAffinityState": "Enabled"
            }
        },
        {
            "type": "Microsoft.Cdn/profiles/originGroups/origins",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('frontDoorName'), '/', variables('originGroupNameBlob'), '/', variables('endpointOriginNameBlob'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorName'), variables('originGroupNameBlob'))]",
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
            ],
            "properties": {
                "hostName": "[variables('endpointHostNameBlob')]",
                "httpPort": 80,
                "httpsPort": 443,
                "originHostHeader": "[variables('endpointHostNameBlob')]",
                "priority": 1,
                "weight": 1000,
                "enabledState": "Enabled",
                "enforceCertificateNameCheck": false
            }
        },
        {
            "condition": "[not(equals(parameters('appCustomDomainName'), ''))]",
            "type": "Microsoft.Cdn/profiles/originGroups/origins",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('frontDoorName'), '/', variables('originGroupNameApp'), '/', parameters('appHostNameLabel'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorName'), variables('originGroupNameApp'))]",
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
            ],
            "properties": {
                "hostName": "[parameters('appHostNameFQDN')]",
                "httpPort": 80,
                "httpsPort": 443,
                "originHostHeader": "[variables('appCustomDomainName')]",
                "priority": 1,
                "weight": 1000,
                "enabledState": "Enabled",
                "enforceCertificateNameCheck": false
            }
        },
        {
            "condition": "[equals(parameters('cdnCustomDomainName'), '')]",
            "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('frontDoorName'), '/', parameters('frontDoorName'), '/', variables('routeNameBlob'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('frontDoorName'), parameters('frontDoorName'))]",
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorName'), variables('originGroupNameBlob'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups/origins', parameters('frontDoorName'), variables('originGroupNameBlob'), variables('endpointOriginNameBlob'))]"
            ],
            "properties": {
                "originGroup": {
                    "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorName'), variables('originGroupNameBlob'))]"
                },
                "ruleSets": [],
                "supportedProtocols": [
                    "Http",
                    "Https"
                ],
                "patternsToMatch": [
                    "/*"
                ],
                "forwardingProtocol": "MatchRequest",
                "linkToDefaultDomain": "Enabled",
                "httpsRedirect": "Disabled",
                "enabledState": "Enabled"
            }
        },
        {
            "condition": "[and(not(equals(parameters('cdnCustomDomainName'), '')), not(equals(parameters('SharedKeyVaultCertificateName'), '')))]",
            "type": "Microsoft.Cdn/profiles/customDomains",
            "apiVersion": "2025-04-15",
            "name": "[concat(parameters('frontDoorName'), '/', variables('customDomainNameBlob'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]",
                "[resourceId('Microsoft.Cdn/profiles/secrets', parameters('frontDoorName'), variables('customCertificateName'))]"
            ],
            "properties": {
                "hostName": "[parameters('cdnCustomDomainName')]",
                "tlsSettings": {
                    "certificateType": "CustomerCertificate",
                    "minimumTlsVersion": "TLS12",
                    "cipherSuiteSetType": "TLS12_2022",
                    "secret": {
                        "id": "[resourceId('Microsoft.Cdn/profiles/secrets', parameters('frontDoorName'), variables('customCertificateName'))]"
                    }
                }
            }
        },
        {
            "condition": "[and(not(equals(parameters('cdnCustomDomainName'), '')), equals(parameters('SharedKeyVaultCertificateName'), ''))]",
            "type": "Microsoft.Cdn/profiles/customDomains",
            "apiVersion": "2025-04-15",
            "name": "[concat(parameters('frontDoorName'), '/', variables('customDomainNameBlob'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
            ],
            "properties": {
                "hostName": "[parameters('cdnCustomDomainName')]",
                "tlsSettings": {
                    "certificateType": "ManagedCertificate",
                    "minimumTlsVersion": "TLS12",
                    "cipherSuiteSetType": "TLS12_2022"
                }
            }
        },
        {
            "condition": "[and(not(equals(parameters('appCustomDomainName'), '')), not(equals(parameters('SharedKeyVaultCertificateName'), '')))]",
            "type": "Microsoft.Cdn/profiles/customDomains",
            "apiVersion": "2025-04-15",
            "name": "[concat(parameters('frontDoorName'), '/', variables('customDomainNameApp'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]",
                "[resourceId('Microsoft.Cdn/profiles/secrets', parameters('frontDoorName'), variables('customCertificateName'))]"
            ],
            "properties": {
                "hostName": "[parameters('appCustomDomainName')]",
                "tlsSettings": {
                    "certificateType": "CustomerCertificate",
                    "minimumTlsVersion": "TLS12",
                    "cipherSuiteSetType": "TLS12_2022",
                    "secret": {
                        "id": "[resourceId('Microsoft.Cdn/profiles/secrets', parameters('frontDoorName'), variables('customCertificateName'))]"
                    }
                }
            }
        },
        {
            "condition": "[and(not(equals(parameters('appCustomDomainName'), '')), equals(parameters('SharedKeyVaultCertificateName'), ''))]",
            "type": "Microsoft.Cdn/profiles/customDomains",
            "apiVersion": "2025-04-15",
            "name": "[concat(parameters('frontDoorName'), '/', variables('customDomainNameApp'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
            ],
            "properties": {
                "hostName": "[parameters('appCustomDomainName')]",
                "tlsSettings": {
                    "certificateType": "ManagedCertificate",
                    "minimumTlsVersion": "TLS12",
                    "cipherSuiteSetType": "TLS12_2022"
                }
            }
        },
        {
            "condition": "[not(equals(parameters('cdnCustomDomainName'), ''))]",
            "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('frontDoorName'), '/', parameters('frontDoorName'), '/', variables('routeNameBlob'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('frontDoorName'), parameters('frontDoorName'))]",
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]",
                "[resourceId('Microsoft.Cdn/profiles/customDomains', parameters('frontDoorName'), variables('customDomainNameBlob'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorName'), variables('originGroupNameBlob'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups/origins', parameters('frontDoorName'), variables('originGroupNameBlob'), variables('endpointOriginNameBlob'))]"
            ],
            "properties": {
                "customDomains": [
                    {
                        "id": "[resourceId('Microsoft.Cdn/profiles/customDomains', parameters('frontDoorName'), variables('customDomainNameBlob'))]"
                    }
                ],
                "originGroup": {
                    "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorName'), variables('originGroupNameBlob'))]"
                },
                "ruleSets": [],
                "supportedProtocols": [
                    "Http",
                    "Https"
                ],
                "patternsToMatch": [
                    "/*"
                ],
                "forwardingProtocol": "MatchRequest",
                "linkToDefaultDomain": "Enabled",
                "httpsRedirect": "Disabled",
                "enabledState": "Enabled"
            }
        },
        {
            "condition": "[not(equals(parameters('appCustomDomainName'), ''))]",
            "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('frontDoorName'), '/', parameters('frontDoorName'), '/', variables('routeNameApp'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('frontDoorName'), parameters('frontDoorName'))]",
                "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]",
                "[resourceId('Microsoft.Cdn/profiles/customDomains', parameters('frontDoorName'), variables('customDomainNameApp'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorName'), variables('originGroupNameApp'))]",
                "[resourceId('Microsoft.Cdn/profiles/originGroups/origins', parameters('frontDoorName'), variables('originGroupNameApp'), parameters('appHostNameLabel'))]"
            ],
            "properties": {
                "customDomains": [
                    {
                        "id": "[resourceId('Microsoft.Cdn/profiles/customDomains', parameters('frontDoorName'), variables('customDomainNameApp'))]"
                    }
                ],
                "originGroup": {
                    "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorName'), variables('originGroupNameApp'))]"
                },
                "ruleSets": [],
                "supportedProtocols": [
                    "Http",
                    "Https"
                ],
                "patternsToMatch": [
                    "/*"
                ],
                "forwardingProtocol": "MatchRequest",
                "linkToDefaultDomain": "Enabled",
                "httpsRedirect": "Disabled",
                "enabledState": "Enabled"
            }
        }
    ],
    "outputs": {
        "frontDoorId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorName'))]"
        }
    }
}
